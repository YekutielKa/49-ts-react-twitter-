{"ast":null,"code":"import { CHANGE_AVATAR, CHANGE_NAME } from \"../actions/userActions\";\nimport { CHANGE_STATS } from \"../actions/statsActions\";\nexport const initialState = {\n  user: {\n    name: 'Monster',\n    avatar: 'https://www.gravatar.com/avatar/0?d=monsterid'\n  },\n  stats: {\n    followers: 0,\n    following: 0\n  }\n};\nexport const twitterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_NAME:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          name: action.payload || state.user.name\n        }\n      };\n    case CHANGE_AVATAR:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          avatar: action.payload || state.user.avatar\n        }\n      };\n    case CHANGE_STATS:\n      const statsType = action.payload.statsType;\n      let res = state.stats[statsType] + (action.payload.isIncrement ? 1 : -1);\n      res = res < 0 ? 0 : res;\n      return {\n        ...state,\n        stats: {\n          ...state.stats,\n          [statsType]: res\n        }\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["CHANGE_AVATAR","CHANGE_NAME","CHANGE_STATS","initialState","user","name","avatar","stats","followers","following","twitterReducer","state","action","type","payload","statsType","res","isIncrement"],"sources":["C:/Users/katan/WebstormProjects/Java 53/49-ts-react-twitter/src/reducers/twitterReducer.ts"],"sourcesContent":["import {Action, State} from \"../utils/type\";\r\nimport {CHANGE_AVATAR, CHANGE_NAME} from \"../actions/userActions\";\r\nimport {CHANGE_STATS} from \"../actions/statsActions\";\r\nimport {StatsType} from \"../utils/type\";\r\n\r\nexport const initialState: State = {\r\n    user: {\r\n        name: 'Monster',\r\n        avatar: 'https://www.gravatar.com/avatar/0?d=monsterid'\r\n    },\r\n    stats: {\r\n        followers: 0,\r\n        following: 0\r\n    }\r\n}\r\n\r\nexport const twitterReducer = (state: State = initialState, action: Action): State => {\r\n    switch (action.type) {\r\n        case CHANGE_NAME:\r\n            return {...state, user: {...state.user, name: action.payload || state.user.name}}\r\n        case CHANGE_AVATAR:\r\n            return {...state, user: {...state.user, avatar: action.payload || state.user.avatar}}\r\n        case CHANGE_STATS:\r\n            const statsType = action.payload.statsType as StatsType\r\n            let res = state.stats[statsType] + (action.payload.isIncrement ? 1 : -1);\r\n            res = res < 0 ? 0 : res\r\n            return {...state, stats: {...state.stats, [statsType]: res}}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}"],"mappings":"AACA,SAAQA,aAAa,EAAEC,WAAW,QAAO,wBAAwB;AACjE,SAAQC,YAAY,QAAO,yBAAyB;AAGpD,OAAO,MAAMC,YAAmB,GAAG;EAC/BC,IAAI,EAAE;IACFC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE;EACZ,CAAC;EACDC,KAAK,EAAE;IACHC,SAAS,EAAE,CAAC;IACZC,SAAS,EAAE;EACf;AACJ,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAY,GAAGR,YAAY,EAAES,MAAc,KAAY;EAClF,QAAQA,MAAM,CAACC,IAAI;IACf,KAAKZ,WAAW;MACZ,OAAO;QAAC,GAAGU,KAAK;QAAEP,IAAI,EAAE;UAAC,GAAGO,KAAK,CAACP,IAAI;UAAEC,IAAI,EAAEO,MAAM,CAACE,OAAO,IAAIH,KAAK,CAACP,IAAI,CAACC;QAAI;MAAC,CAAC;IACrF,KAAKL,aAAa;MACd,OAAO;QAAC,GAAGW,KAAK;QAAEP,IAAI,EAAE;UAAC,GAAGO,KAAK,CAACP,IAAI;UAAEE,MAAM,EAAEM,MAAM,CAACE,OAAO,IAAIH,KAAK,CAACP,IAAI,CAACE;QAAM;MAAC,CAAC;IACzF,KAAKJ,YAAY;MACb,MAAMa,SAAS,GAAGH,MAAM,CAACE,OAAO,CAACC,SAAsB;MACvD,IAAIC,GAAG,GAAGL,KAAK,CAACJ,KAAK,CAACQ,SAAS,CAAC,IAAIH,MAAM,CAACE,OAAO,CAACG,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MACxED,GAAG,GAAGA,GAAG,GAAG,CAAC,GAAG,CAAC,GAAGA,GAAG;MACvB,OAAO;QAAC,GAAGL,KAAK;QAAEJ,KAAK,EAAE;UAAC,GAAGI,KAAK,CAACJ,KAAK;UAAE,CAACQ,SAAS,GAAGC;QAAG;MAAC,CAAC;IAEhE;MACI,OAAOL,KAAK;EACpB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}